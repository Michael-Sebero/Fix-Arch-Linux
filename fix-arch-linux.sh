#!/bin/bash

# Function to prompt for root password
prompt_for_root_password() {
    read -rsp "Password: " ROOT_PASSWORD
    echo ""
}

# Prompt for root password once
prompt_for_root_password

commands=("Fix 'failed to synchronize all databases' for Pacman" "Fix 'unable to lock database' for Pacman" "Fix 'unable to lock database' for Pamac" "Fix clock time" "Fix connectivity issues" "Fix corrupted PGP signatures" "Fix corrupted packages" "Fix DNSCrypt issues" "Fix GPG key errors" "Fix login issues" "Fix login issues [NVIDIA]" "See system logs" "Update system" "Quit")

selected=0

# Function to display the list and highlight the selected item
display_list() {
    clear
    echo -e "\033[1m  Fix Arch Linux\033[0m\n  --------------"
    for i in $(seq 0 $((${#commands[@]} - 1))); do
        if [ $i -eq $selected ]; then
            if [ "${commands[$i]}" == "Quit" ]; then
                echo -e "\033[1m➤ ${commands[$i]}\033[0m\n"
            else
                echo -e "\033[1m➤ ${commands[$i]}\033[0m\n"
            fi
        else
            echo -e "  ${commands[$i]}\n"
        fi
    done
}

# Function to execute the selected command
execute_command() {
case ${commands[$selected]} in
    "Fix 'failed to synchronize all databases' for Pacman")
        echo "$ROOT_PASSWORD" | su -c 'rm -rf /var/lib/pacman/sync && rm -rf /var/tmp/pamac/dbs/sync && pacman -Sy'
        read -p "Press Enter to return to the menu..."
        ;;

    "Fix 'unable to lock database' for pacman")
        echo rm /var/lib/pacman/db.lck
        read -p "Press Enter to return to the menu..."
        ;;
            
    "Fix 'unable to lock database' for pamac")
        echo rm /var/tmp/pamac/dbs/db.lck
        read -p "Press Enter to return to the menu..."
        ;;

    "Fix Clock Time")
        echo "$ROOT_PASSWORD" | sudo ntpdate ntp.ubuntu.com
        read -p "Press Enter to return to the menu..."
        ;;

    "Fix Connectivity issues")
        echo "$ROOT_PASSWORD" | su -c 'pacman -Rdd networkmanager --noconfirm && rm -rf /etc/NetworkManager && pacman -S networkmanager --noconfirm --needed && nmcli con add type ethernet ifname eth0 && reboot'
        read -p "Press Enter to return to the menu..."
        ;;

    "Fix corrupted PGP signatures")
        echo "$ROOT_PASSWORD" | su -c 'pacman-key --refresh-keys'
        read -p "Press Enter to return to the menu..."
        ;;

    "Fix corrupted packages")
        echo "$ROOT_PASSWORD" | su -c 'pacman -Syu --overwrite --noconfirm '*' $(pacman -Qnq)'
        read -p "Press Enter to return to the menu..."
        ;;
        
    "Login issue fix")
        echo "$ROOT_PASSWORD" | su -c 'update-grub'
        read -p "Press Enter to return to the menu..."
        ;;
        
    "Login issue fix [NVIDIA]")
        echo "$ROOT_PASSWORD" | su -c 'pacman -R nvidia-dkms --noconfirm && pacman -S nvidia-dkms --noconfirm && update-grub'
        read -p "Press Enter to return to the menu..."
        ;;

    "Fix DNSCrypt issues")
        echo "$ROOT_PASSWORD" | su -c 'pacman -Rdd dnscrypt-proxy --noconfirm && pacman -S dnscrypt-proxy --noconfirm && echo -e "# Generated by NetworkManager\nnameserver 127.0.0.1" | tee /etc/resolv.conf'
        read -p "Press Enter to return to the menu..."
        ;;

    "Fix GPG key errors")
        echo "$ROOT_PASSWORD" | su -c 'mv /etc/pacman.d/gnupg{,.bak} && pacman-key --init && pacman-key --populate archlinux && pacman-key --populate artix && pacman-key --recv-key FBA220DFC880C036 --keyserver keyserver.ubuntu.com && pacman-key --lsign-key FBA220DFC880C036 && pacman -U --noconfirm --needed 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst' 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst' && pacman-key --populate manjaro'
        read -p "Press Enter to return to the menu..."
        ;;

    "Login issue fix")
        echo "$ROOT_PASSWORD" | su -c 'update-grub && pacman -R --noconfirm linux linux-headers && pacman -S --noconfirm linux linux-headers'
        read -p "Press Enter to return to the menu..."
        ;;

    "Login issue fix [NVIDIA]")
        echo "$ROOT_PASSWORD" | su -c 'pacman -R nvidia-dkms --noconfirm && pacman -S nvidia-dkms --noconfirm && pacman -R --noconfirm linux linux-headers && pacman -S --noconfirm linux linux-headers && update-grub'
        read -p "Press Enter to return to the menu..."
        ;;

    "See system logs")
        echo "$ROOT_PASSWORD" | su -c 'dmesg'
        read -p "Press Enter to return to the menu..."
        ;;

    "Update system")
        echo "$ROOT_PASSWORD" | su -c 'pacman -Syyu --noconfirm && update-grub'
        read -p "Press Enter to return to the menu..."
        ;;

    "Quit")
        exit 0
        ;;
esac
}

# Main loop
while true; do
    display_list

    read -sn 1 key

    case $key in
        "A") ((selected--)); [ $selected -lt 0 ] && selected=$(( ${#commands[@]} - 1 ));;
        "B") ((selected++)); [ $selected -ge ${#commands[@]} ] && selected=0 ;;
        "") execute_command ;;
        *) ;;
    esac
done
```

Now, the "Fix Clock Time" command has been added, and the commands are sorted alphabetically.
